{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIMC,G,wBAAOC,SAASC,cAAc,SAC9BC,EAAOF,SAASC,cAAc,SAmCpC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA3CPN,EAAKc,MAAMC,iBAAkB,EAAAjB,EAAAkB,qBAE7Bb,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBd,MAAOkB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EACzC,IAAbA,EACF3B,EAAc2B,EAAUL,GACrBM,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,OACjB,EAAAR,EAAAoC,oBAAmB,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAElE8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,OAClB,EAAAR,EAAAuC,mBAAkB,sBAAuCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGnEF,EAAc2B,EAAUL,EAAaG,GAAaE,EAAW,IAC1DC,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,OACjB,EAAAR,EAAAoC,oBAAmB,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAElE8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,OAClB,EAAAR,EAAAuC,mBAAkB,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGnEH,EAAKmC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { showSuccessMessage } from './functions';\nimport { showFailorMessage } from './functions';\nimport { getRandomHexColor } from './functions';\n\nconst body = document.querySelector('body');\nconst form = document.querySelector('.form');\n\nbody.style.backgroundColor = getRandomHexColor();\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    if (position === 1) {\n      createPromise(position, delayValue)\n        .then(({ position, delay }) => {\n          showSuccessMessage(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          showFailorMessage(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(position, delayValue + stepValue * (position - 1))\n        .then(({ position, delay }) => {\n          showSuccessMessage(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          showFailorMessage(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n    form.reset();\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$cKDzr","parcelRequire","$ce04d3a99e08e73b$var$body","document","querySelector","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","style","backgroundColor","getRandomHexColor","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","position1","then","param","showSuccessMessage","concat","catch","showFailorMessage","reset"],"version":3,"file":"03-promises.709e37c9.js.map"}