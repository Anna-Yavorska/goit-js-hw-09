{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAOF,SAASC,cAAc,SAoCpC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,EAAmBC,GAC1BjB,EAAAkB,OAAOC,QAAQF,E,CAGjB,SAASG,EAAkBH,GACzBjB,EAAAkB,OAAOG,QAAQJ,E,CArDjBf,EAAKoB,MAAMC,gBAyDF,IAAIb,KAAKc,MAAsB,SAAhBd,KAAKC,UACxBc,SAAS,IACTC,SAAS,EAAG,KAzDjBrB,EAAKsB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAQrB,MAAAsB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAC9CC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAElC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EACzC,IAAbA,EACFlC,EAAckC,EAAUL,GACrBM,MAAK,EAAClC,SAAEA,EAAQC,MAAEA,MACjBQ,EAAmB,qBAAqBT,QAAeC,MAAU,IAElEkC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MAClBY,EAAkB,oBAAoBb,QAAeC,MAAU,IAGnEF,EAAckC,EAAUL,EAAaG,GAAaE,EAAW,IAC1DC,MAAK,EAAClC,SAAEA,EAAQC,MAAEA,MACjBQ,EAAmB,qBAAqBT,QAAeC,MAAU,IAElEkC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MAClBY,EAAkB,oBAAoBb,QAAeC,MAAU,IAGrEH,EAAKsC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst body = document.querySelector('body');\nconst form = document.querySelector('.form');\n\nbody.style.backgroundColor = getRandomHexColor();\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    if (position === 1) {\n      createPromise(position, delayValue)\n        .then(({ position, delay }) => {\n          showSuccessMessage(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          showFailorMessage(`Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(position, delayValue + stepValue * (position - 1))\n        .then(({ position, delay }) => {\n          showSuccessMessage(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          showFailorMessage(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n    form.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction showSuccessMessage(message) {\n  Notify.success(message);\n}\n\nfunction showFailorMessage(message) {\n  Notify.failure(message);\n}\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$body","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$showSuccessMessage","message","Notify","success","$47d4ff9957288465$var$showFailorMessage","failure","style","backgroundColor","floor","toString","padStart","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","delayValue","Number","value","stepValue","amountValue","position1","then","catch","reset"],"version":3,"file":"03-promises.a87b3288.js.map"}